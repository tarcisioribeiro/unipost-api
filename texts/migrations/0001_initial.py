# Generated by Django 5.2.6 on 2025-09-24 19:19

import core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(max_length=200, verbose_name='Tema')),
                ('platform', models.CharField(choices=[('FCB', 'Facebook'), ('INT', 'Instagram'), ('TTK', 'Tiktok'), ('LKN', 'Linkedin')], max_length=200, verbose_name='Plataforma')),
                ('content', models.TextField(verbose_name='Conte√∫do')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Aprovado')),
            ],
            options={
                'verbose_name': 'Texto (Deprecated)',
                'verbose_name_plural': 'Textos (Deprecated)',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ContentPiece',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('content', models.TextField(validators=[core.validators.validate_content_length], verbose_name='Content')),
                ('content_type', models.CharField(choices=[('post', 'Blog Post'), ('social', 'Social Media Post'), ('email', 'Email Content'), ('ad', 'Advertisement'), ('video_script', 'Video Script'), ('other', 'Other')], default='social', max_length=20, verbose_name='Content Type')),
                ('target_platforms', models.JSONField(default=list, verbose_name='Target Platforms')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('review', 'Under Review'), ('approved', 'Approved'), ('scheduled', 'Scheduled'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20, verbose_name='Status')),
                ('tags', models.JSONField(default=list, validators=[core.validators.validate_tags_list], verbose_name='Tags')),
                ('metadata', models.JSONField(default=dict, verbose_name='Additional Metadata')),
                ('is_published', models.BooleanField(default=False, verbose_name='Published')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Published At')),
                ('scheduled_for', models.DateTimeField(blank=True, null=True, verbose_name='Scheduled For')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='View Count')),
                ('engagement_score', models.FloatField(blank=True, null=True, verbose_name='Engagement Score')),
                ('performance_metrics', models.JSONField(default=dict, verbose_name='Performance Metrics')),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='content_pieces', to='core.campaign', verbose_name='Campaign')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_pieces', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
            options={
                'verbose_name': 'Content Piece',
                'verbose_name_plural': 'Content Pieces',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['creator', 'status'], name='texts_conte_creator_fcbd0e_idx'), models.Index(fields=['campaign', 'content_type'], name='texts_conte_campaig_b01deb_idx'), models.Index(fields=['scheduled_for'], name='texts_conte_schedul_1f5722_idx'), models.Index(fields=['is_published', 'published_at'], name='texts_conte_is_publ_3f60be_idx')],
            },
        ),
    ]
