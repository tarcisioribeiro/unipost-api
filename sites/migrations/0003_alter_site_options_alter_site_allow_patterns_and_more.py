# Generated by Django 5.2.6 on 2025-09-24 19:19

import core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
        ('sites', '0002_site_monitored'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='site',
            options={'ordering': ['-id'], 'verbose_name': 'Site (Deprecated)', 'verbose_name_plural': 'Sites (Deprecated)'},
        ),
        migrations.AlterField(
            model_name='site',
            name='allow_patterns',
            field=models.TextField(blank=True, null=True, verbose_name='Padrões de URL permitidos (um por linha)'),
        ),
        migrations.AlterField(
            model_name='site',
            name='content_selectors',
            field=models.TextField(blank=True, null=True, verbose_name='Seletores CSS para conteúdo'),
        ),
        migrations.AlterField(
            model_name='site',
            name='deny_patterns',
            field=models.TextField(blank=True, null=True, verbose_name='Padrões de URL negados (um por linha)'),
        ),
        migrations.AlterField(
            model_name='site',
            name='monitored',
            field=models.BooleanField(default=False, verbose_name='Monitorar para novos posts'),
        ),
        migrations.CreateModel(
            name='ScrapedPost',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=500, verbose_name='Post Title')),
                ('url', models.URLField(unique=True, verbose_name='Original URL')),
                ('content', models.TextField(validators=[core.validators.validate_content_length], verbose_name='Extracted Content')),
                ('summary', models.TextField(blank=True, verbose_name='AI-Generated Summary')),
                ('keywords', models.JSONField(default=list, verbose_name='Extracted Keywords')),
                ('language', models.CharField(default='pt-BR', max_length=10, verbose_name='Detected Language')),
                ('status', models.CharField(choices=[('discovered', 'Discovered'), ('processing', 'Processing'), ('processed', 'Processed'), ('failed', 'Failed'), ('archived', 'Archived')], default='discovered', max_length=20, verbose_name='Processing Status')),
                ('processing_started_at', models.DateTimeField(blank=True, null=True, verbose_name='Processing Started At')),
                ('processing_completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Processing Completed At')),
                ('word_count', models.PositiveIntegerField(default=0, verbose_name='Word Count')),
                ('reading_time_minutes', models.PositiveIntegerField(default=0, verbose_name='Estimated Reading Time (minutes)')),
                ('quality_score', models.FloatField(blank=True, null=True, verbose_name='Content Quality Score')),
                ('featured_image_url', models.URLField(blank=True, null=True, verbose_name='Featured Image URL')),
                ('images', models.JSONField(default=list, validators=[core.validators.validate_url_list], verbose_name='Extracted Image URLs')),
                ('author', models.CharField(blank=True, max_length=200, verbose_name='Original Author')),
                ('published_date', models.DateTimeField(blank=True, null=True, verbose_name='Original Publish Date')),
                ('scraped_at', models.DateTimeField(auto_now_add=True, verbose_name='Scraped At')),
                ('ai_analysis', models.JSONField(default=dict, verbose_name='AI Analysis Results')),
                ('content_themes', models.JSONField(default=list, verbose_name='Identified Content Themes')),
                ('sentiment_score', models.FloatField(blank=True, null=True, verbose_name='Sentiment Analysis Score')),
                ('error_message', models.TextField(blank=True, verbose_name='Last Processing Error')),
                ('retry_count', models.PositiveIntegerField(default=0, verbose_name='Processing Retry Count')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Processed By')),
                ('source_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scraped_posts', to='core.sourcesite', verbose_name='Source Site')),
            ],
            options={
                'verbose_name': 'Scraped Post',
                'verbose_name_plural': 'Scraped Posts',
                'ordering': ['-scraped_at'],
                'indexes': [models.Index(fields=['source_site', 'status'], name='sites_scrap_source__2243a8_idx'), models.Index(fields=['scraped_at', 'status'], name='sites_scrap_scraped_0159f7_idx'), models.Index(fields=['quality_score'], name='sites_scrap_quality_d67c1c_idx'), models.Index(fields=['published_date'], name='sites_scrap_publish_dd2f7c_idx')],
            },
        ),
    ]
