# Generated by Django 5.2.6 on 2025-09-24 19:19

import core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('core', '0001_initial'),
        ('unipost_image_generator', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='generatedimage',
            options={'ordering': ['-created_at'], 'verbose_name': 'Imagem Gerada (Deprecated)', 'verbose_name_plural': 'Imagens Geradas (Deprecated)'},
        ),
        migrations.AlterField(
            model_name='generatedimage',
            name='generated_prompt',
            field=models.TextField(help_text='Prompt criado pelo Claude MCP', verbose_name='Prompt Gerado'),
        ),
        migrations.CreateModel(
            name='AIImageRequest',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.UUIDField(blank=True, null=True)),
                ('original_text', models.TextField(help_text='Original text that inspired the image', verbose_name='Source Text')),
                ('ai_prompt', models.TextField(help_text='Prompt created by AI for image generation', validators=[core.validators.validate_prompt_content], verbose_name='AI-Generated Prompt')),
                ('user_prompt_modifications', models.TextField(blank=True, help_text='User modifications to the AI prompt', verbose_name='User Modifications')),
                ('final_prompt', models.TextField(help_text='Final prompt sent to image generation API', verbose_name='Final Prompt Used')),
                ('model_name', models.CharField(default='dall-e-3', max_length=100, verbose_name='AI Model Used')),
                ('image_size', models.CharField(choices=[('256x256', '256x256'), ('512x512', '512x512'), ('1024x1024', '1024x1024'), ('1792x1024', '1792x1024'), ('1024x1792', '1024x1792')], default='1024x1024', max_length=20, verbose_name='Image Size')),
                ('style', models.CharField(choices=[('vivid', 'Vivid'), ('natural', 'Natural')], default='vivid', max_length=50, verbose_name='Image Style')),
                ('quality', models.CharField(choices=[('standard', 'Standard'), ('hd', 'HD')], default='standard', max_length=20, verbose_name='Image Quality')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='Status')),
                ('processing_started_at', models.DateTimeField(blank=True, null=True, verbose_name='Processing Started')),
                ('processing_completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Processing Completed')),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True, verbose_name='Estimated Cost (USD)')),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True, verbose_name='Actual Cost (USD)')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('retry_count', models.PositiveIntegerField(default=0, verbose_name='Retry Count')),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='image_requests', to='core.campaign', verbose_name='Campaign')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_requests', to=settings.AUTH_USER_MODEL, verbose_name='Requester')),
            ],
            options={
                'verbose_name': 'AI Image Request',
                'verbose_name_plural': 'AI Image Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EnhancedGeneratedImage',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image_path', models.CharField(max_length=500, verbose_name='Image File Path')),
                ('original_url', models.URLField(blank=True, help_text='Original URL from AI service', verbose_name='Original API URL')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='File Size (bytes)')),
                ('file_format', models.CharField(default='png', max_length=10, verbose_name='File Format')),
                ('width', models.PositiveIntegerField(verbose_name='Image Width')),
                ('height', models.PositiveIntegerField(verbose_name='Image Height')),
                ('aspect_ratio', models.CharField(blank=True, max_length=20, verbose_name='Aspect Ratio')),
                ('api_response', models.JSONField(default=dict, validators=[core.validators.validate_metadata_structure], verbose_name='Full API Response')),
                ('revised_prompt', models.TextField(blank=True, help_text='Prompt modifications made by the AI service', verbose_name='API Revised Prompt')),
                ('quality_score', models.FloatField(blank=True, null=True, verbose_name='Quality Score')),
                ('content_analysis', models.JSONField(default=dict, verbose_name='Content Analysis Results')),
                ('download_count', models.PositiveIntegerField(default=0, verbose_name='Download Count')),
                ('last_accessed', models.DateTimeField(blank=True, null=True, verbose_name='Last Accessed')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Approved for Use')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Approved At')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_images', to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('image_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_images', to='unipost_image_generator.aiimagerequest', verbose_name='Image Request')),
            ],
            options={
                'verbose_name': 'Enhanced Generated Image',
                'verbose_name_plural': 'Enhanced Generated Images',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='aiimagerequest',
            index=models.Index(fields=['requester', 'status'], name='unipost_ima_request_cb3b8c_idx'),
        ),
        migrations.AddIndex(
            model_name='aiimagerequest',
            index=models.Index(fields=['campaign', 'status'], name='unipost_ima_campaig_2e266d_idx'),
        ),
        migrations.AddIndex(
            model_name='aiimagerequest',
            index=models.Index(fields=['status', 'created_at'], name='unipost_ima_status_b3457f_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedgeneratedimage',
            index=models.Index(fields=['image_request', 'is_approved'], name='unipost_ima_image_r_d2fbac_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedgeneratedimage',
            index=models.Index(fields=['width', 'height'], name='unipost_ima_width_404a0c_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedgeneratedimage',
            index=models.Index(fields=['quality_score'], name='unipost_ima_quality_adba29_idx'),
        ),
    ]
