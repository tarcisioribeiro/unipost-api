# Generated by Django 5.2.6 on 2025-09-24 19:19

import core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('core', '0001_initial'),
        ('embeddings', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='embedding',
            options={'ordering': ['-id'], 'verbose_name': 'Embedding (Deprecated)', 'verbose_name_plural': 'Embeddings (Deprecated)'},
        ),
        migrations.CreateModel(
            name='KnowledgeBase',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Knowledge Base Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('embedding_model', models.CharField(default='text-embedding-ada-002', max_length=100, verbose_name='Embedding Model')),
                ('dimension', models.PositiveIntegerField(default=1536, verbose_name='Vector Dimension')),
                ('is_public', models.BooleanField(default=False, verbose_name='Public Knowledge Base')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('total_embeddings', models.PositiveIntegerField(default=0, verbose_name='Total Embeddings')),
                ('total_tokens', models.PositiveBigIntegerField(default=0, verbose_name='Total Tokens Processed')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='knowledge_bases', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Knowledge Base',
                'verbose_name_plural': 'Knowledge Bases',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EnhancedEmbedding',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=500, verbose_name='Content Title')),
                ('content', models.TextField(verbose_name='Original Content')),
                ('content_hash', models.CharField(help_text='SHA-256 hash of content for deduplication', max_length=64, unique=True, verbose_name='Content Hash')),
                ('embedding_vector', models.JSONField(validators=[core.validators.validate_embedding_vector], verbose_name='Embedding Vector')),
                ('model_name', models.CharField(default='text-embedding-ada-002', max_length=100, verbose_name='Model Used')),
                ('token_count', models.PositiveIntegerField(verbose_name='Token Count')),
                ('object_id', models.UUIDField(blank=True, null=True)),
                ('source_type', models.CharField(choices=[('scraped_post', 'Scraped Post'), ('content_piece', 'Content Piece'), ('user_upload', 'User Upload'), ('generated', 'AI Generated'), ('imported', 'Imported'), ('other', 'Other')], max_length=50, verbose_name='Source Type')),
                ('source_url', models.URLField(blank=True, null=True, verbose_name='Original Source URL')),
                ('quality_score', models.FloatField(blank=True, null=True, verbose_name='Content Quality Score')),
                ('language', models.CharField(default='pt-BR', max_length=10, verbose_name='Content Language')),
                ('topics', models.JSONField(default=list, verbose_name='Identified Topics')),
                ('keywords', models.JSONField(default=list, verbose_name='Key Terms')),
                ('is_processed', models.BooleanField(default=True, verbose_name='Processing Complete')),
                ('processing_error', models.TextField(blank=True, verbose_name='Processing Error')),
                ('metadata', models.JSONField(default=dict, validators=[core.validators.validate_metadata_structure], verbose_name='Enhanced Metadata')),
                ('similarity_search_count', models.PositiveIntegerField(default=0, verbose_name='Times Found in Similarity Search')),
                ('last_accessed', models.DateTimeField(blank=True, null=True, verbose_name='Last Accessed')),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='embeddings', to='core.campaign', verbose_name='Campaign')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('knowledge_base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='embeddings', to='embeddings.knowledgebase', verbose_name='Knowledge Base')),
            ],
            options={
                'verbose_name': 'Enhanced Embedding',
                'verbose_name_plural': 'Enhanced Embeddings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='knowledgebase',
            index=models.Index(fields=['owner', 'is_active'], name='embeddings__owner_i_0c4c02_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedembedding',
            index=models.Index(fields=['knowledge_base', 'source_type'], name='embeddings__knowled_68b555_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedembedding',
            index=models.Index(fields=['content_hash'], name='embeddings__content_897993_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedembedding',
            index=models.Index(fields=['quality_score'], name='embeddings__quality_3c0512_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedembedding',
            index=models.Index(fields=['campaign', 'is_processed'], name='embeddings__campaig_5d974b_idx'),
        ),
        migrations.AddIndex(
            model_name='enhancedembedding',
            index=models.Index(fields=['language', 'source_type'], name='embeddings__languag_122dcb_idx'),
        ),
    ]
